#!/usr/bin/env python3
"""
–ú–æ–¥—É–ª—å –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞
"""

import logging
from typing import List, Dict
from pair_status_manager import PairStatusManager, PairStatus

logger = logging.getLogger(__name__)

class BotUIRestrictions:
    """–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ"""
    
    def __init__(self):
        self.status_manager = PairStatusManager()
    
    def filter_available_pairs(self, all_pairs: List[tuple]) -> List[tuple]:
        """–§–∏–ª—å—Ç—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞—Ä—ã –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
        available_pairs = []
        
        for stock, futures in all_pairs:
            if self.status_manager.is_pair_available(stock, futures):
                available_pairs.append((stock, futures))
            else:
                # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–∞—Ä—ã
                status_info = self.status_manager.get_pair_status_info(stock, futures)
                if status_info:
                    logger.info(f"üö´ –ü–∞—Ä–∞ {stock}/{futures} —Å–∫—Ä—ã—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {status_info.reason}")
        
        return available_pairs
    
    def get_pair_restriction_message(self, stock: str, futures: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–∞—Ä—ã"""
        status_info = self.status_manager.get_pair_status_info(stock, futures)
        
        if not status_info:
            return ""
        
        if status_info.status == PairStatus.BLOCKED:
            return f"üö´ {stock}/{futures} –≤—Ä–µ–º–µ–Ω–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞: {status_info.reason}"
        elif status_info.status == PairStatus.UNAVAILABLE:
            return f"‚ùå {stock}/{futures} –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {status_info.reason}"
        
        return ""
    
    def format_available_pairs_message(self, available_pairs: List[tuple], blocked_count: int = 0, unavailable_count: int = 0) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–∞—Ä–∞—Ö"""
        message = f"‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ –ø–∞—Ä –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏: {len(available_pairs)}\n\n"
        
        if blocked_count > 0:
            message += f"üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –ø–∞—Ä: {blocked_count} (–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã)\n"
        
        if unavailable_count > 0:
            message += f"‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –ø–∞—Ä: {unavailable_count} (–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö)\n"
        
        if blocked_count > 0 or unavailable_count > 0:
            message += "\nüí° –ü–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ª—å–∫–æ —Ä–∞–±–æ—á–∏–µ –ø–∞—Ä—ã –¥–ª—è –≤–∞—à–µ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
        
        return message

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –±–æ—Ç–µ
ui_restrictions = BotUIRestrictions()