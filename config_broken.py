import os
import random
from dataclasses import dataclass, field
from typing import List, Dict, Optional
from datetime import datetime, time, timezone, timedelta

# –í–µ—Ä—Å–∏—è –±–æ—Ç–∞
BOT_VERSION = "0.0.1"

@dataclass
class Config:
    """–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞"""
    
    # API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    MOEX_API_BASE_URL: str = "https://iss.moex.com/iss"
    REQUEST_TIMEOUT: int = 30
    RATE_LIMIT_DELAY: float = 5.0  # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∫ MOEX API (—É–≤–µ–ª–∏—á–µ–Ω–∞)
    
    # –ü—Ä–∞–≤–∏–ª–∞ MOEX API –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ (—É–ª—å—Ç—Ä–∞–∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–µ)
    MAX_REQUESTS_PER_MINUTE: int = 15  # –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É (–µ—â–µ –±–æ–ª—å—à–µ —Å–Ω–∏–∂–µ–Ω–æ)
    MAX_CONCURRENT_REQUESTS: int = 1   # –¢–æ–ª—å–∫–æ 1 –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    RETRY_ATTEMPTS: int = 1            # –ú–∏–Ω–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫
    RETRY_DELAY: float = 8.0           # –£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞
    BACKOFF_MULTIPLIER: float = 4.0    # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –º–Ω–æ–∂–∏—Ç–µ–ª—å –∑–∞–¥–µ—Ä–∂–∫–∏
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ (—É–ª—å—Ç—Ä–∞–∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è)
    MAX_PAIRS_PER_BATCH: int = 5       # 5 –ø–∞—Ä –∑–∞ —Ü–∏–∫–ª –¥–ª—è –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –Ω–∞–≥—Ä—É–∑–∫–∏
    BATCH_DELAY: float = 5.0           # –£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –±–∞—Ç—á–∞–º–∏
    SMART_ROTATION_ENABLED: bool = True # –£–º–Ω–∞—è —Ä–æ—Ç–∞—Ü–∏—è –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–æ–≤
    FULL_SCAN_CYCLES: int = 6          # –ë–æ–ª—å—à–µ —Ü–∏–∫–ª–æ–≤ –¥–ª—è 30 –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞—Ä (30/5)
    MIN_REQUEST_INTERVAL: float = 5.0  # –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    MONITORING_INTERVAL_MIN: int = 300  # 5 –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    MONITORING_INTERVAL_MAX: int = 420  # 7 –º–∏–Ω—É—Ç –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    MIN_SPREAD_THRESHOLD: float = 1.0  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥ –¥–ª—è —Å–∏–≥–Ω–∞–ª–∞ (%)
    SPREAD_LEVEL_2: float = 2.0  # –£—Ä–æ–≤–µ–Ω—å –¥–ª—è –∑–µ–ª–µ–Ω–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è (%)
    SPREAD_LEVEL_3: float = 3.0  # –£—Ä–æ–≤–µ–Ω—å –¥–ª—è —è—Ä–∫–æ-–∑–µ–ª–µ–Ω–æ–≥–æ –≤—ã–¥–µ–ª–µ–Ω–∏—è (%)
    CLOSE_SPREAD_MIN: float = 0.0  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è (%)
    CLOSE_SPREAD_MAX: float = 0.5  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è (%)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Å–ø—Ä–µ–¥–æ–≤
    MAX_SPREAD_HISTORY: int = 10  # –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø–∏—Å–µ–π –≤ –∏—Å—Ç–æ—Ä–∏–∏ —Å–ø—Ä–µ–¥–æ–≤
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    ADMIN_USERNAME: str = "@Ildaryakupovv"
    SUPPORT_MESSAGE: str = "–î–ª—è —Å–≤—è–∑–∏ —Å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –Ω–∞–ø–∏—à–∏—Ç–µ @Ildaryakupovv"
    
    # –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ MOEX API
    BACKUP_DATA_SOURCES: List[str] = field(default_factory=lambda: [
        "tradingview",
        "investing_com", 
        "yahoo_finance"
    ])
    
    # –†–∞–±–æ—á–∏–µ —á–∞—Å—ã –±–∏—Ä–∂–∏ (–º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è)
    # –ê–∫—Ü–∏–∏ —Å 8:00, —Ñ—å—é—á–µ—Ä—Å—ã —Å 9:00, –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å 9:00
    TRADING_START_TIME: time = time(9, 0)     # 09:00 –ú–°–ö (—Ñ—å—é—á–µ—Ä—Å—ã)
    TRADING_END_TIME: time = time(18, 45)     # 18:45 –ú–°–ö
    TRADING_DAYS: List[int] = field(default_factory=lambda: [0, 1, 2, 3, 4])  # –ü–Ω-–ü—Ç (0=–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫)
    
    # –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    MONITORED_INSTRUMENTS: Dict[str, str] = field(default_factory=dict)
    
    def __post_init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞"""
        if not self.MONITORED_INSTRUMENTS:
            self.MONITORED_INSTRUMENTS = {
                # ===== –ì–û–õ–£–ë–´–ï –§–ò–®–ö–ò (–ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø–∞—Ä—ã) =====
                "SBER": "SBERF",  # –°–±–µ—Ä–±–∞–Ω–∫ - –¥–Ω–µ–≤–Ω–æ–π —Ñ—å—é—á–µ—Ä—Å ‚úÖ 
                "GAZP": "GAZPF",  # –ì–∞–∑–ø—Ä–æ–º - –¥–Ω–µ–≤–Ω–æ–π —Ñ—å—é—á–µ—Ä—Å ‚úÖ
                "LKOH": "LKZ5",   # –õ—É–∫–æ–π–ª - –¥–µ–∫–∞–±—Ä—å 2025 ‚úÖ 
                "GMKN": "GKZ5",   # –ì–ú–ö –ù–æ—Ä–∏–ª—å—Å–∫–∏–π –Ω–∏–∫–µ–ª—å - –¥–µ–∫–∞–±—Ä—å 2025 ‚úÖ
                "VTBR": "VBZ5",   # –í–¢–ë - –¥–µ–∫–∞–±—Ä—å 2025 ‚úÖ  
                "ROSN": "RNZ5",   # –†–æ—Å–Ω–µ—Ñ—Ç—å - –¥–µ–∫–∞–±—Ä—å 2025 ‚úÖ
                "TATN": "TNZ5",   # –¢–∞—Ç–Ω–µ—Ñ—Ç—å - –¥–µ–∫–∞–±—Ä—å 2025 ‚úÖ
                "ALRS": "ALZ5",   # –ê–õ–†–û–°–ê - –¥–µ–∫–∞–±—Ä—å 2025 ‚úÖ
                
                # ===== –†–ï–ö–û–ú–ï–ù–î–û–í–ê–ù–ù–´–ï –ü–ê–†–´ (–≤—Å–µ Z5 –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã —Å –∫–æ–Ω–≤–µ—Ä—Å–∏–µ–π) =====
                "ABIO": "ISZ5",   # –ê–í–¢–û–í–ê–ó
                "AFKS": "AKZ5",   # –ê–§–ö –°–∏—Å—Ç–µ–º–∞
                "AFLT": "AFZ5",   # –ê—ç—Ä–æ—Ñ–ª–æ—Ç
                "AKRN": "ANZ5",   # –ê–∫—Ä–æ–Ω
                "APTK": "APZ5",   # –ê–ø—Ç–µ–∫–∏ 36.6
                "BANE": "BNZ5",   # –ë–∞—à–Ω–µ—Ñ—Ç—å
                "BANEP": "BEZ5",  # –ë–∞—à–Ω–µ—Ñ—Ç—å-–ü
                "BSPB": "BSZ5",   # –ë–∞–Ω–∫ –°–ü–ë
                "CBOM": "CBZ5",   # –ú–ö–ë
                "CHMF": "CHZ5",   # –°–µ–≤–µ—Ä—Å—Ç–∞–ª—å
                "DIXY": "DXZ5",   # –î–∏–∫—Å–∏
                "DSKY": "DSZ5",   # –î–µ—Ç—Å–∫–∏–π –º–∏—Ä
                "ETLN": "ETZ5",   # Etalon Group
                "FEES": "FSZ5",   # –§–°–ö –ï–≠–°
                "FIVE": "FVZ5",   # X5 Retail
                "FIXP": "FXZ5",   # Fix Price
                "FLOT": "FLZ5",   # –°–æ–≤–∫–æ–º—Ñ–ª–æ—Ç
                "GAZP": "GZZ5",   # –ì–∞–∑–ø—Ä–æ–º (–Ω–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç)
                "GEMC": "GEZ5",   # –ì–µ–Ω–µ—Ç–∏–∫–æ
                "GMKN": "GKZ5",   # –ì–ú–ö –ù–æ—Ä–∏–ª—å—Å–∫–∏–π –Ω–∏–∫–µ–ª—å (–Ω–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç)
                "HHRU": "HRZ5",   # HeadHunter
                "HYDR": "HYZ5",   # –†—É—Å–ì–∏–¥—Ä–æ
                "IRAO": "IRZ5",   # –ò–Ω—Ç–µ—Ä –†–ê–û
                "KMAZ": "KMZ5",   # –ö–ê–ú–ê–ó
                "LKOH": "LKZ5",   # –õ—É–∫–æ–π–ª (–Ω–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç)
                "LSRG": "LSZ5",   # –õ–°–†
                "MAGN": "MAZ5",   # –ú–ú–ö
                "MAIL": "MLZ5",   # Mail.ru
                "MGNT": "MGZ5",   # –ú–∞–≥–Ω–∏—Ç
                "MOEX": "MEZ5",   # –ú–æ—Å–∫–æ–≤—Å–∫–∞—è –±–∏—Ä–∂–∞
                "MSNG": "MSZ5",   # –ú–æ—Å—ç–Ω–µ—Ä–≥–æ
                "MTSS": "MTZ5",   # –ú–¢–°
                "NKNC": "NKZ5",   # –ù–∏–∂–Ω–µ–∫–∞–º—Å–∫–Ω–µ—Ñ—Ç–µ—Ö–∏–º
                "NLMK": "NLZ5",   # –ù–õ–ú–ö
                "NVTK": "NVZ5",   # –ù–û–í–ê–¢–≠–ö
                "OZON": "OZZ5",   # Ozon
                "PHOR": "PHZ5",   # –§–æ—Å–ê–≥—Ä–æ
                "PIKK": "PKZ5",   # –ü–ò–ö
                "PLZL": "PLZ5",   # –ü–æ–ª—é—Å
                "PMSB": "PMZ5",   # –ü—Ä–æ–º—Å–≤—è–∑—å–±–∞–Ω–∫
                "POLY": "POZ5",   # –ü–æ–ª–∏–º–µ—Ç–∞–ª–ª
                "PRTK": "PRZ5",   # –ü–†–û–¢–ï–ö
                "QIWI": "QIZ5",   # QIWI
                "RASP": "RAZ5",   # –†–∞—Å–ø–∞–¥—Å–∫–∞—è
                "RENI": "REZ5",   # –†–µ–Ω–µ—Å—Å–∞–Ω—Å –°—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏–µ
                "ROSN": "RNZ5",   # –†–æ—Å–Ω–µ—Ñ—Ç—å (–Ω–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç)
                "RTKM": "RTZ5",   # –†–æ—Å—Ç–µ–ª–µ–∫–æ–º
                "RUAL": "RUZ5",   # –†–£–°–ê–õ
                "SBER": "SRZ5",   # –°–±–µ—Ä–±–∞–Ω–∫ (–Ω–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç)
                "SGZH": "SZZ5",   # –°–µ–≥–µ–∂–∞
                "SMLT": "SMZ5",   # –°–∞–º–æ–ª–µ—Ç
                "SNGS": "SNZ5",   # –°—É—Ä–≥—É—Ç–Ω–µ—Ñ—Ç–µ–≥–∞–∑
                "TATN": "TNZ5",   # –¢–∞—Ç–Ω–µ—Ñ—Ç—å (–Ω–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç)
                "TCSG": "TCZ5",   # TCS Group
                "TRNFP": "TRZ5",  # –¢—Ä–∞–Ω—Å–Ω–µ—Ñ—Ç—å-–ü
                "VTBR": "VBZ5",   # –í–¢–ë (–Ω–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç)
                "YAKG": "YAZ5"    # –Ø–∫—É—Ç—Å–∫—ç–Ω–µ—Ä–≥–æ
            }
    
    @classmethod
    def get_admin_users(cls) -> List[int]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
        admin_ids_str = os.getenv("ADMIN_USER_IDS", "")
        if not admin_ids_str:
            return []
        
        try:
            return [int(user_id.strip()) for user_id in admin_ids_str.split(",") if user_id.strip()]
        except ValueError:
            return []
    
    @classmethod
    def is_admin(cls, user_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
        return user_id in cls.get_admin_users()
                "CBOM": "CMZ5",   # –ú–æ—Å–∫–æ–≤—Å–∫–∏–π –∫—Ä–µ–¥–∏—Ç–Ω—ã–π –±–∞–Ω–∫ - –¥–µ–∫–∞–±—Ä—å 2025
                "BSPB": "BSZ5",   # –ë–∞–Ω–∫ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥ - –¥–µ–∫–∞–±—Ä—å 2025
                "SVCB": "SCZ5",   # –°–æ–≤–∫–æ–º–±–∞–Ω–∫ - –¥–µ–∫–∞–±—Ä—å 2025
    
    def get_market_status_message(self) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ —Ä—ã–Ω–∫–∞"""
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
        import pytz
        moscow_tz = pytz.timezone('Europe/Moscow')
        now = datetime.now(moscow_tz)
        
        if self.is_market_open(now):
            return "üü¢ –ë–∏—Ä–∂–∞ –æ—Ç–∫—Ä—ã—Ç–∞"
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–æ–≥–¥–∞ –æ—Ç–∫—Ä–æ–µ—Ç—Å—è –±–∏—Ä–∂–∞
        if now.weekday() in self.TRADING_DAYS:
            if now.time() < self.TRADING_START_TIME:
                return f"üî¥ –ë–∏—Ä–∂–∞ –∑–∞–∫—Ä—ã—Ç–∞\nüìÖ –û—Ç–∫—Ä–æ–µ—Ç—Å—è —Å–µ–≥–æ–¥–Ω—è –≤ {self.TRADING_START_TIME.strftime('%H:%M')} –ú–°–ö"
            else:
                return f"üî¥ –ë–∏—Ä–∂–∞ –∑–∞–∫—Ä—ã—Ç–∞\nüìÖ –û—Ç–∫—Ä–æ–µ—Ç—Å—è –∑–∞–≤—Ç—Ä–∞ –≤ {self.TRADING_START_TIME.strftime('%H:%M')} –ú–°–ö"
        else:
            # –í—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å
            days = ['–ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', '–≤—Ç–æ—Ä–Ω–∏–∫', '—Å—Ä–µ–¥—É', '—á–µ—Ç–≤–µ—Ä–≥', '–ø—è—Ç–Ω–∏—Ü—É', '—Å—É–±–±–æ—Ç—É', '–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ']
            next_trading_day = min(self.TRADING_DAYS)
            return f"üî¥ –ë–∏—Ä–∂–∞ –∑–∞–∫—Ä—ã—Ç–∞ (–≤—ã—Ö–æ–¥–Ω–æ–π)\nüìÖ –û—Ç–∫—Ä–æ–µ—Ç—Å—è –≤ {days[next_trading_day]} –≤ {self.TRADING_START_TIME.strftime('%H:%M')} –ú–°–ö"
    
    def get_trading_schedule_info(self) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏ —Ç–æ—Ä–≥–æ–≤"""
        return f"""üìä –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏:

üìà –ê–∫—Ü–∏–∏: 08:00 - {self.TRADING_END_TIME.strftime('%H:%M')} –ú–°–ö
üìä –§—å—é—á–µ—Ä—Å—ã: {self.TRADING_START_TIME.strftime('%H:%M')} - {self.TRADING_END_TIME.strftime('%H:%M')} –ú–°–ö
ü§ñ –ê—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: {self.TRADING_START_TIME.strftime('%H:%M')} - {self.TRADING_END_TIME.strftime('%H:%M')} –ú–°–ö
üìÖ –¢–æ—Ä–≥–æ–≤—ã–µ –¥–Ω–∏: –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ - –ü—è—Ç–Ω–∏—Ü–∞
üö´ –í—ã—Ö–æ–¥–Ω—ã–µ: –°—É–±–±–æ—Ç–∞, –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ

‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: –Ω–µ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–µ –¥–Ω–∏"""
    
    def get_futures_specs(self) -> Dict[str, Dict]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–π —Ñ—å—é—á–µ—Ä—Å–æ–≤"""
        return {
            "SiM5": {"underlying": "USD/RUB", "lot_size": 1000, "tick_size": 0.0001},
            "GZM5": {"underlying": "GAZP", "lot_size": 100, "tick_size": 0.001},
            "LKM5": {"underlying": "LKOH", "lot_size": 10, "tick_size": 0.01},
            "NVM5": {"underlying": "NVTK", "lot_size": 10, "tick_size": 0.01},
            "YNM5": {"underlying": "YNDX", "lot_size": 1, "tick_size": 0.01},
            "TCM5": {"underlying": "TCSG", "lot_size": 1, "tick_size": 0.01},
            "RSM5": {"underlying": "ROSN", "lot_size": 10, "tick_size": 0.01},
            "GMM5": {"underlying": "GMKN", "lot_size": 1, "tick_size": 0.01},
            "PLM5": {"underlying": "PLZL", "lot_size": 1, "tick_size": 0.01},
            "MGM5": {"underlying": "MGNT", "lot_size": 1, "tick_size": 0.01},
            "SGM5": {"underlying": "SNGS", "lot_size": 100, "tick_size": 0.001},
            "VTM5": {"underlying": "VTBR", "lot_size": 1000, "tick_size": 0.0001},
            "ALM5": {"underlying": "ALRS", "lot_size": 10, "tick_size": 0.001},
            "TTM5": {"underlying": "TATN", "lot_size": 10, "tick_size": 0.01},
            "MTM5": {"underlying": "MTSS", "lot_size": 10, "tick_size": 0.01},
        }
