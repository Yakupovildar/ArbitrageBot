import logging
from datetime import datetime
from typing import List, Dict
from telegram import Update
from telegram.ext import ContextTypes
from telegram.constants import ParseMode
from config import Config
from arbitrage_calculator import ArbitrageCalculator
from moex_api import MOEXAPIClient

logger = logging.getLogger(__name__)

class BotHandlers:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ Telegram –±–æ—Ç–∞"""
    
    def __init__(self):
        self.config = Config()
        self.calculator = ArbitrageCalculator()
        self.subscribers: set = set()
        self.application = None
        
    def set_application(self, application):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ Application"""
        self.application = application
    
    async def start_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        user_id = update.effective_user.id
        
        welcome_message = """
ü§ñ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç–∞ –∞—Ä–±–∏—Ç—Ä–∞–∂–∞ MOEX!*

–≠—Ç–æ—Ç –±–æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç —Å–ø—Ä–µ–¥—ã –º–µ–∂–¥—É –∞–∫—Ü–∏—è–º–∏ –∏ —Ñ—å—é—á–µ—Ä—Å–∞–º–∏ –Ω–∞ –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–µ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏.

üìä *–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:*
‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–ø—Ä–µ–¥–æ–≤ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
‚Ä¢ –°–∏–≥–Ω–∞–ª—ã –ø—Ä–∏ —Å–ø—Ä–µ–¥–µ > 1%
‚Ä¢ –¶–≤–µ—Ç–æ–≤–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –ø–æ —É—Ä–æ–≤–Ω—è–º —Å–ø—Ä–µ–¥–∞
‚Ä¢ –°–∏–≥–Ω–∞–ª—ã –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–∑–∏—Ü–∏–π
‚Ä¢ –†–∞—Å—á–µ—Ç –ø—Ä–æ–ø–æ—Ä—Ü–∏–π –¥–ª—è –∞—Ä–±–∏—Ç—Ä–∞–∂–∞

üéØ *–¶–≤–µ—Ç–æ–≤–∞—è —Å—Ö–µ–º–∞:*
‚Ä¢ –û–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç: —Å–ø—Ä–µ–¥ 1-2%
‚Ä¢ üü¢ –ó–µ–ª–µ–Ω—ã–π: —Å–ø—Ä–µ–¥ 2-3%
‚Ä¢ üü¢üü¢ –Ø—Ä–∫–æ-–∑–µ–ª–µ–Ω—ã–π: —Å–ø—Ä–µ–¥ > 3%

üìù *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*
/help - —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º
/status - —Å—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ —Ä—ã–Ω–∫–∞
/positions - –æ—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏
/instruments - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
/history - –∏—Å—Ç–æ—Ä–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–ø—Ä–µ–¥–æ–≤
/schedule - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤ –±–∏—Ä–∂–∏
/subscribe - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
/unsubscribe - –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
/test - —Ç–µ—Å—Ç–æ–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–ø—Ä–µ–¥–æ–≤ –∫–∞–∂–¥—ã–µ 5-7 –º–∏–Ω—É—Ç

‚ö†Ô∏è *–í–∞–∂–Ω–æ:* –°–∏–≥–Ω–∞–ª—ã –Ω–æ—Å—è—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä. –¢–æ—Ä–≥–æ–≤–ª—è –Ω–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö —Ä—ã–Ω–∫–∞—Ö —Å–≤—è–∑–∞–Ω–∞ —Å —Ä–∏—Å–∫–∞–º–∏.
        """
        
        await update.message.reply_text(
            welcome_message,
            parse_mode=ParseMode.MARKDOWN
        )
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
        help_text = """
üìö *–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:*

/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/status - –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ —Ä—ã–Ω–∫–∞
/positions - –°–ø–∏—Å–æ–∫ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π
/instruments - –°–ø–∏—Å–æ–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
/history - –ò—Å—Ç–æ—Ä–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–ø—Ä–µ–¥–æ–≤ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10)
/schedule - –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤ –∏ —Å—Ç–∞—Ç—É—Å –±–∏—Ä–∂–∏
/subscribe - –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–∏–≥–Ω–∞–ª–∞—Ö
/unsubscribe - –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
/test - –¢–µ—Å—Ç–æ–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–ø—Ä–µ–¥–æ–≤ –∫–∞–∂–¥—ã–µ 5-7 –º–∏–Ω—É—Ç

üîç *–ö–∞–∫ —á–∏—Ç–∞—Ç—å —Å–∏–≥–Ω–∞–ª—ã:*

*–°–∏–≥–Ω–∞–ª –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ:*
üìà SBER/SiM5 | –°–ø—Ä–µ–¥: 2.5%
üí∞ –ê–∫—Ü–∏–∏: –ö–£–ü–ò–¢–¨ 100 –ª–æ—Ç–æ–≤
üìä –§—å—é—á–µ—Ä—Å: –ü–†–û–î–ê–¢–¨ 1 –ª–æ—Ç
‚è∞ 12:34:56

*–°–∏–≥–Ω–∞–ª –Ω–∞ –∑–∞–∫—Ä—ã—Ç–∏–µ:*
üîÑ –î—Ä—É–∂–∏—â–µ, –ø–æ—Ä–∞ –∑–∞–∫—Ä—ã–≤–∞—Ç—å –ø–æ–∑–∏—Ü–∏—é –ø–æ SBER/SiM5
üìâ –°–ø—Ä–µ–¥ —Å–Ω–∏–∑–∏–ª—Å—è –¥–æ 0.3%

‚ö° *–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–∞–∂–¥—ã–µ 5-7 –º–∏–Ω—É—Ç (—Ä–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)*
        """
        
        await update.message.reply_text(
            help_text,
            parse_mode=ParseMode.MARKDOWN
        )
    
    async def status_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status"""
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä—ã–Ω–∫–∞
            market_status = self.config.get_market_status_message()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å API
            async with MOEXAPIClient() as moex_client:
                trading_status = await moex_client.get_trading_status()
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ç—É—Å–µ
            status_message = "üìä *–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞:*\n\n"
            
            # –°—Ç–∞—Ç—É—Å —Ä—ã–Ω–∫–∞
            status_message += f"{market_status}\n\n"
            
            # –°—Ç–∞—Ç—É—Å API
            api_status = "‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω" if trading_status["api_available"] else "‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
            status_message += f"üîå MOEX API: {api_status}\n"
            
            # –°—Ç–∞—Ç—É—Å —Ä—ã–Ω–∫–æ–≤
            stock_status = "üü¢ –û—Ç–∫—Ä—ã—Ç" if trading_status["stock_market"] else "üî¥ –ó–∞–∫—Ä—ã—Ç"
            futures_status = "üü¢ –û—Ç–∫—Ä—ã—Ç" if trading_status["futures_market"] else "üî¥ –ó–∞–∫—Ä—ã—Ç"
            
            status_message += f"üìà –§–æ–Ω–¥–æ–≤—ã–π —Ä—ã–Ω–æ–∫: {stock_status}\n"
            status_message += f"üìä –°—Ä–æ—á–Ω—ã–π —Ä—ã–Ω–æ–∫: {futures_status}\n\n"
            
            # –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
            user_id = update.effective_user.id
            subscription_status = "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞" if user_id in self.subscribers else "‚ùå –û—Ç–∫–ª—é—á–µ–Ω–∞"
            status_message += f"üîî –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞: {subscription_status}\n"
            
            # –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏
            open_positions_count = len(self.calculator.open_positions)
            status_message += f"üìã –û—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ–∑–∏—Ü–∏–π: {open_positions_count}\n"
            
            # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ (–¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
            if self.config.is_admin(user_id):
                status_message += f"üë• –í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤: {len(self.subscribers)}\n"
            
            status_message += f"\n‚è∞ –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: 5-7 –º–∏–Ω (—Ä–∞–Ω–¥–æ–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π)"
            
            await update.message.reply_text(
                status_message,
                parse_mode=ParseMode.MARKDOWN
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ status: {e}")
            await update.message.reply_text(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã"
            )
    
    async def positions_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /positions"""
        try:
            positions = self.calculator.get_open_positions_summary()
            
            if not positions:
                await update.message.reply_text(
                    "üìã *–û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ–∑–∏—Ü–∏–∏:*\n\n–ù–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π",
                    parse_mode=ParseMode.MARKDOWN
                )
                return
            
            message = "üìã *–û—Ç–∫—Ä—ã—Ç—ã–µ –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏:*\n\n"
            
            for i, position in enumerate(positions, 1):
                entry_time = position["entry_timestamp"]
                
                message += f"*{i}. {position['stock_ticker']}/{position['futures_ticker']}*\n"
                message += f"üìà –ê–∫—Ü–∏–∏: {position['stock_position']} {position['stock_lots']} –ª–æ—Ç–æ–≤\n"
                message += f"üìä –§—å—é—á–µ—Ä—Å: {position['futures_position']} {position['futures_lots']} –ª–æ—Ç–æ–≤\n"
                message += f"üìä –í—Ö–æ–¥–Ω–æ–π —Å–ø—Ä–µ–¥: {position['entry_spread']:.2f}%\n"
                message += f"‚è∞ –í—Ä–µ–º—è –≤—Ö–æ–¥–∞: {entry_time}\n\n"
            
            await update.message.reply_text(
                message,
                parse_mode=ParseMode.MARKDOWN
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ positions: {e}")
            await update.message.reply_text(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–∑–∏—Ü–∏–π"
            )
    
    async def instruments_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /instruments"""
        try:
            message = "üìä *–û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:*\n\n"
            
            for stock, futures in self.config.MONITORED_INSTRUMENTS.items():
                message += f"‚Ä¢ {stock} ‚ÜîÔ∏è {futures}\n"
            
            message += f"\nüìà –í—Å–µ–≥–æ –ø–∞—Ä: {len(self.config.MONITORED_INSTRUMENTS)}"
            message += f"\n‚ö° –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–ø—Ä–µ–¥ –¥–ª—è —Å–∏–≥–Ω–∞–ª–∞: {self.config.MIN_SPREAD_THRESHOLD}%"
            message += f"\nüü¢ –ó–µ–ª–µ–Ω–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ: > {self.config.SPREAD_LEVEL_2}%"
            message += f"\nüü¢üü¢ –Ø—Ä–∫–æ-–∑–µ–ª–µ–Ω–æ–µ: > {self.config.SPREAD_LEVEL_3}%"
            
            await update.message.reply_text(
                message,
                parse_mode=ParseMode.MARKDOWN
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ instruments: {e}")
            await update.message.reply_text(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤"
            )
    
    async def subscribe_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /subscribe"""
        user_id = update.effective_user.id
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä—ã–Ω–∫–∞ –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∫–µ
        if not self.config.is_trading_hours():
            market_status = self.config.get_trading_status_message()
            await update.message.reply_text(
                f"{market_status}\n\n‚ö†Ô∏è –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –±—É–¥–µ—Ç –∞–∫—Ç–∏–≤–µ–Ω —Ç–æ–ª—å–∫–æ –≤ —Ç–æ—Ä–≥–æ–≤—ã–µ —á–∞—Å—ã.",
                parse_mode=ParseMode.MARKDOWN
            )
        
        if user_id in self.subscribers:
            await update.message.reply_text(
                "‚úÖ –í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–∏–≥–Ω–∞–ª–∞—Ö –∞—Ä–±–∏—Ç—Ä–∞–∂–∞"
            )
        else:
            self.subscribers.add(user_id)
            await update.message.reply_text(
                "üîî –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!\n\n"
                "–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —Å–∏–≥–Ω–∞–ª—ã –æ–± –∞—Ä–±–∏—Ç—Ä–∞–∂–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –∫–∞–∂–¥—ã–µ 5-7 –º–∏–Ω—É—Ç.\n\n"
                "–î–ª—è –æ—Ç–ø–∏—Å–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /unsubscribe"
            )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    
    async def unsubscribe_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /unsubscribe"""
        user_id = update.effective_user.id
        
        if user_id in self.subscribers:
            self.subscribers.remove(user_id)
            await update.message.reply_text(
                "üîï –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–∏–≥–Ω–∞–ª–∞—Ö –∞—Ä–±–∏—Ç—Ä–∞–∂–∞"
            )
        else:
            await update.message.reply_text(
                "‚ùå –í—ã –Ω–µ –±—ã–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
            )
        
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    
    async def history_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /history - –ø–æ–∫–∞–∑–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–ø—Ä–µ–¥–æ–≤"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–ø—Ä–µ–¥–æ–≤ –æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∞
            from monitoring import ArbitrageMonitor
            # –í —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–¥–µ —ç—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–æ —á–µ—Ä–µ–∑ dependency injection
            # –ó–¥–µ—Å—å –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–ª—É—à–∫—É –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            
            history_message = "üìä –ò—Å—Ç–æ—Ä–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–ø—Ä–µ–¥–æ–≤:\n\n"
            history_message += "‚ö†Ô∏è –ò—Å—Ç–æ—Ä–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞\n"
            history_message += "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /status –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã"
            
            await update.message.reply_text(
                history_message,
                parse_mode=ParseMode.MARKDOWN
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ history: {e}")
            await update.message.reply_text(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ —Å–ø—Ä–µ–¥–æ–≤"
            )
    
    async def schedule_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /schedule - —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤"""
        try:
            schedule_info = self.config.get_trading_schedule_info()
            market_status = self.config.get_market_status_message()
            
            full_message = f"{market_status}\n\n{schedule_info}"
            
            await update.message.reply_text(
                full_message,
                parse_mode=ParseMode.MARKDOWN
            )
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ schedule: {e}")
            await update.message.reply_text(
                "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Ç–æ—Ä–≥–æ–≤"
            )

    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±—ã—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        await update.message.reply_text(
            "ü§ñ –Ø –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
        )
    
    def get_subscribers(self) -> set:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤"""
        return self.subscribers.copy()
